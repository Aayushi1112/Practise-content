package com.policy.creation.MongoExample.passwordPolicy;

import org.kie.api.KieServices;
import org.kie.api.builder.KieBuilder;
import org.kie.api.builder.KieFileSystem;
import org.kie.api.builder.KieRepository;
import org.kie.api.builder.ReleaseId;
import org.kie.api.runtime.KieContainer;
import org.kie.api.runtime.KieSession;
import org.kie.internal.io.ResourceFactory;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class PasswordPolicyController {
	
	public String createPassword() {
		
		PasswordPolicyRules passwordPolicyRules=getPasswordPolicyRulesObject();
		KieSession kieSession=getKieSession();

		
		return null;
		
	}

	private PasswordPolicyRules getPasswordPolicyRulesObject() {
		PasswordPolicyRules passwordPolicyRules=new PasswordPolicyRules();
		passwordPolicyRules.setMaxPasswordLength(10);
		passwordPolicyRules.setMinDigits(2);
		passwordPolicyRules.setMinPasswordLength(6);
		passwordPolicyRules.setAllowCapitalAndSpecialCharacters(1,3);

	}
	
	public KieSession getKieSession() {
		KieServices kieServices = KieServices.Factory.get();
		KieFileSystem kieFileSystem = kieServices.newKieFileSystem();
		kieFileSystem.write(ResourceFactory.newClassPathResource("customer-discount.drl"));
		KieBuilder kb = kieServices.newKieBuilder(kieFileSystem);
		kb.buildAll();
        KieRepository kieRepository = kieServices.getRepository();
		ReleaseId krDefaultReleaseId = kieRepository.getDefaultReleaseId();
		KieContainer kieContainer = kieServices.newKieContainer(krDefaultReleaseId);
		KieSession kieSession = kieContainer.newKieSession();
		return kieSession;
		}

}
